<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1"/>
    <title>备忘录</title>
    <link rel="icon" href="/images/favicon.ico">
    <link href="/css/bootstrap.min.css" rel="stylesheet"/>
    <link href="/css/reset.less" rel="stylesheet/less"/>
    <link href="/css/main.less" rel="stylesheet/less"/>
    <link rel="stylesheet" href="/font-awesome/css/font-awesome.min.css">
    <script src="/js/less.js" type="text/javascript" charset="utf-8"></script>
    <script src="js/jquery-1.11.3.min.js"></script>
    <script src="js/bootstrap.min.js"></script>
    <script type="text/javascript" src="js/underscore-noflect.js"></script>
    <script src="/js/lib/knockout-3.4.0.js"></script>
    <script type="text/javascript">
        (function(){
            var html = document.querySelector("html");
            var width = html.getBoundingClientRect().width;
            html.style.fontSize = width/25 + "px";
        })();
        // @w:1/30rem; 

    </script>
        
</head>
<body>

<div class="container note-pages" id="notes">
    <header class="clearfix header">
        <a href="javascript:;" class="return-button">
            <i class="fa fa-chevron-left fa-lg"></i>
        </a>
        <strong class="f_r edit-items edit-active" id="edit-items">编辑</strong>
    </header>
    <div class="content">
        <h1 class="title">备忘录</h1>
        <div class="notes">
            <ul class="notes-items" data-bind="foreach:{data: notes}">
                <li class="notes-item clearfix" data-bind="attr:{id:id}">
                    <div class="item-container f_l" data-bind="event: {touchstart: $root.actionStart,touchmove: $root.actionMove,touchend: $root.actionEnd}">
                    <!-- <div class="item-container f_l" data-bind="event:{click: $root.actionClick}"> -->
                        <div class="item-title">
                            <span data-bind="text:noteAnalyze(text).title"></span>
                        </div>
                        <div class="item-content">
                            <span data-bind="text:timeChange(time)" class="item-time"></span>
                            <span data-bind="text:noteAnalyze(text).content" class="item-text"></span>
                        </div>
                    </div>
                    <div class="item-delete f_l" data-bind="event: {click: $root.actionDelete}">
                        <i class="fa fa-trash fa-lg"></i>
                    </div>
                </li>
            </ul>
        </div>
    </div>
    <div class="footer clearfix">
        <span class="notes-number">
            <strong data-bind="text:notes().length" id="number"></strong>个备忘录
        </span>
        <a href="/noteEdit" class="f_r edit" id="edit">
            <i class="fa fa-edit fa-lg"></i>
        </a>
    </div>
</div>





<script type="text/javascript">
    $('.record').click(function () {
        $.post('/record',{
            'content': $('.text').val()
        },function (result) {
            /*if (result.result==-1) {
                
            } else if(result.result==1){
                console.log(1);
            }  */    
        })   
    })
    /*//返回备忘录列表
    $('.return-button').click(function () {
        window.location="/register";   
    })*/
    noteNotes();
    var notes;
    //获取个人所有备忘录文本
    function noteNotes() {
        $.ajax({
            'url': '/noteNotes',
            'type': 'get',
            'success': function (result) {
                if (result) {
                    var vm=new ViewModel(result.text);
                    ko.applyBindings(vm);
                } else{
                    // alert('错误！');
                }
            }
        })
    }
    //时间格式修改
    function timeChange(text) {
        var content=text.replace(/([^\u0000-\u00FF])/g,'/')
        return content;
    }
    //获得备忘笔记的头部和内容部分
    function noteAnalyze(text) {
        var obj={};
        var arr=text.split('\r\n');
        if (arr[0].length>=20) {
            obj.title=text.substring(0,19);
            obj.content=text.substring(20);      
        } else{
            obj.title=arr[0];
            obj.content=text.substring(arr[0].length); 
        }
        return obj;
    }
    //定义ViewModel
    function ViewModel(result) {
        var self=this;
        var number=0,click=true;
        self.notes=ko.observableArray(result);
        self.actionClick=function () {
            
        }
        self.init=function () {
            self.pageX=0;
            self.disX=0;
            // self.pageY=0;
            // self.disY=0;
        };   
        //单击备忘笔记，滑动备忘笔记  
        self.actionClick=function (event) {
            // self.init();
            moveBack(event.currentTarget);
            var target=$(event.currentTarget);
            self.pageX=event.touches[0].pageX;
            // self.pageY=event.touches[0].pageY;
        }; 
        //双击备忘笔记，进入编辑页面 
        self.actionDblclick=function (event) {
            var element=$(event.currentTarget).parent(),
                id=element.attr('id');
            window.location="/noteEdit/"+id; 
        }; 
        //手指接触到备忘笔记,双击和单击处理
        self.actionStart=function (element,index,data) {
            self.init();
            // moveBack(event.currentTarget);
            // var target=$(event.currentTarget);
            // self.pageX=event.touches[0].pageX;
            // self.pageY=event.touches[0].pageY;
            // event.stopPropagation();
            if(click){
                setTimeout(function(){      
                    number=0;
                    click=true;
                },400);
                click=false;
            }
            number++;
            if(number>=2){
                self.actionDblclick(event);
            } else{
                self.actionClick(event);
            }
        };
        //手指滑动备忘笔记
        self.actionMove=function (element,index,data) {
            // event.preventDefault();
            self.disX=event.touches[0].pageX-self.pageX;
            /*self.disY=event.touches[0].pageY-self.pageY;
            var x=self.disX,y=self.disY;
            var w = x<0?x*-1:x;     //x轴的滑动值
            var h = y<0?y*-1:y;     //y轴的滑动值
            console.log(w,h);
            if(w>h){ 
                console.log(222);               //如果是在x轴中滑动
                event.preventDefault();
            }*/
            var target=$(event.currentTarget),left=self.disX; 
            if (left>0) {
                left=0; 
                self.disX=0;        
            } else if(left<=-target.next().height()){
                left=-target.next().height();
                self.disX=-target.next().height(); 
            }
            target.css({
                'margin-left': left+'px'
            })
            target.next().css({
                'width': Math.abs(left)+'px'
            })
        };
        //手指离开备忘笔记
        self.actionEnd=function () {
            var target=$(event.currentTarget),
                maxWidth=target.next().height(),
                left=Math.abs(self.disX);
            //没有移动超过方块最大宽度一半或者原来是打开状态时，关闭删除部分；超过方块最大宽度一半且小于等于最大宽度时，打开删除部分
            if ((left>0&&left<maxWidth/2)||target[0].back==true) {
                target.removeClass('active').animate({'margin-left':'0'},'fast',function () {
                    target[0].back=false;
                });            
                target.next().animate({'width':'0'},'fast');
                actionEdit(false);
            } else if(left>=maxWidth/2&&left<=maxWidth){
                target.addClass('active').animate({'margin-left':-maxWidth+'px'},'fast',function () {
                    target[0].back=true;
                });       
                target.next().animate({'width':maxWidth+'px'},'fast');
                actionEdit(true);
            }
        }; 
        //点击删除备忘笔记
        self.actionDelete=function () {
            var element=$(event.currentTarget).parent(),
                id=element.attr('id');
            $.post('/delete/'+id,{
                'follow': false
            },function (result) {
                if (result=='1') {
                    //数据库删除数据后，删除页面中的响应的DOM
                    var number=parseFloat($('#number').html());
                    element.remove();
                    $('#number').html(--number); 
                } else{
                    return;
                }
            })
        };
    }
    //备忘录都移动会原来位置，排除当前已经点击的对象
    function moveBack(now) {
        if ($('.item-container')) {
            $('.item-container').each(function (index,element) {
                if ($(now)[0]!=$(element)[0]&&$(this).hasClass('active')) {
                    $(this)[0].back=false;
                    $(this).removeClass('active').animate({'margin-left':'0'},'fast');       
                    $(this).next().animate({'width':'0'},'fast');
                }
            })
        }
    }
    //编辑按钮操作
    function actionEdit(edit) {
        if (edit) {
            //点击完成按钮，关闭删除部分
            $('.edit-items').removeClass('edit-active').addClass('edit-inactive').html('完成');   
            $('.edit-items.edit-inactive').click(function () {
                moveBack();
                $('.edit-items').removeClass('edit-inactive').addClass('edit-active').html('编辑');
            })             
        } else{
            $('.edit-items').removeClass('edit-inactive').addClass('edit-active').html('编辑');
        }    
    }
    editActive();
    //头部编辑按钮操作
    function editActive() {
        $('.edit-items.edit-active').click(function () {
            // console.log(2);
        })
    }
        
     
              
</script>
</body>
</html>