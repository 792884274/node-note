<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1"/>
    <title>备忘录</title>
    <link rel="icon" href="/images/favicon.ico">
    <link href="/css/bootstrap.min.css" rel="stylesheet"/>
    <link href="/css/reset.less" rel="stylesheet/less"/>
    <link href="/css/main.less" rel="stylesheet/less"/>
    <link rel="stylesheet" href="/font-awesome/css/font-awesome.min.css">
    <script src="/js/less.js" type="text/javascript" charset="utf-8"></script>
    <script src="js/jquery-1.11.3.min.js"></script>
    <script src="js/bootstrap.min.js"></script>
    <script type="text/javascript" src="js/underscore-noflect.js"></script>
    <script src="/js/lib/knockout-3.4.0.js"></script>
    <script type="text/javascript">
        (function(){
            var html = document.querySelector("html");
            var width = html.getBoundingClientRect().width;
            html.style.fontSize = width/25 + "px";
        })();
        // @w:1/30rem; 

    </script>
        
</head>
<body>

<div class="container note-pages" id="notes">
    <%- include('header') -%>
    <div class="content">
        <h1 class="title">备忘录</h1>
        <div class="notes">
            <!-- <ul class="notes-items" data-bind="foreach:notes.list">
                <li class="notes-item clearfix" data-bind="attr:{id:id}">
                    <div class="item-container f_l" data-bind="event:{touchstart: notes.actionStart,touchmove: notes.actionMove,touchend: notes.actionEnd}">
                        <div class="item-title">
                            <span data-bind="text:noteAnalyze(text).title"></span>
                        </div>
                        <div class="item-content">
                            <span data-bind="text:timeChange(time)" class="item-time"></span>
                            <span data-bind="text:noteAnalyze(text).content" class="item-text"></span>
                        </div>
                    </div>
                    <div class="item-delete f_l">
                        <i class="fa fa-trash fa-lg"></i>
                    </div>
                </li>
            </ul> -->
            <ul class="notes-items" data-bind="foreach:{data: notes}">
                <li class="notes-item clearfix">
                    <div class="item-container f_l" data-bind="event: {touchstart: $root.actionStart,touchmove: $root.actionMove,touchend: $root.actionEnd}">
                        <div class="item-title">
                            <span data-bind="text:noteAnalyze(text).title"></span>
                        </div>
                        <div class="item-content">
                            <span data-bind="text:timeChange(time)" class="item-time"></span>
                            <span data-bind="text:noteAnalyze(text).content" class="item-text"></span>
                        </div>
                    </div>
                    <div class="item-delete f_l">
                        <i class="fa fa-trash fa-lg"></i>
                    </div>
                </li>
            </ul>
        </div>
    </div>
    <div class="footer clearfix">
        <span class="notes-number">
            <strong data-bind="text:notes().length"></strong>个备忘录
        </span>
        <a href="/noteEdit" class="f_r edit" id="edit">
            <i class="fa fa-edit fa-lg"></i>
        </a>
    </div>
</div>





<script type="text/javascript">
    $('.record').click(function () {
        $.post('/record',{
            'content': $('.text').val()
        },function (result) {
            /*if (result.result==-1) {
                
            } else if(result.result==1){
                console.log(1);
            }  */    
        })   
    })
    //编辑
    $('#edit').click(function () {
        $('.text').focus();  
    })
    //退出编辑
    $('#complete').click(function () {
        $('.text').blur();  
    })
    //返回备忘录列表
    $('.return-button').click(function () {
        window.location="/register";   
    })
    noteNotes();
    var notes;
    //获取个人所有备忘录文本
    function noteNotes() {
        $.ajax({
            'url': '/noteNotes',
            'type': 'get',
            'success': function (result) {
                if (result) {
                    /*if (!notes) {
                        notes={
                            list: ko.observableArray(),
                            length: ko.observable(),
                            actionStart: function (event) {
                                console.log(event.currentTarget,this);
                            },
                            actionMove: function (event) {
                                console.log(2);
                            },
                            actionEnd: function () {
                                console.log(3);
                            }  
                        };
                        ko.applyBindings(notes,document.getElementById("notes"));
                    }
                    notes.list(result.text);
                    notes.length(result.text.length);*/
                    var vm=new ViewModel(result.text);
                    // vm=result.text;
                    ko.applyBindings(vm);
                    // console.log(result);
                } else{
                    // alert('错误！');
                }
            }
        })
    }
    //时间格式修改
    function timeChange(text) {
        var content=text.replace(/([^\u0000-\u00FF])/g,'/')
        return content;
    }
    //获得备忘笔记的头部和内容部分
    function noteAnalyze(text) {
        var obj={};
        var arr=text.split('\r\n');
        if (arr[0].length>=20) {
            obj.title=text.substring(0,19);
            obj.content=text.substring(20);      
        } else{
            obj.title=arr[0];
            obj.content=text.substring(arr[0].length); 
        }
        return obj;
    }
   /* //定义notes数据对象
    function NotesViewModel(list,length) {
        var self=this;
        self.list=ko.observableArray(list);
        // self.length=ko.observable(length);
    }*/
    //定义ViewModel
    function ViewModel(result) {
        var self=this;
        self.pageX=0;
        self.disX=0;
        self.initialLeft=0;
        self.finalLeft=0;
        self.target=null;
        self.notes=ko.observableArray(result);
        //手指接触到备忘笔记
        self.actionStart=function (element,index,data) {
            // console.log(event.currentTarget);
            self.target=target=$(event.currentTarget);
            self.pageX=event.touches[0].pageX;
            self.initialLeft=parseFloat(target.css('marginLeft'));
            // console.log(self.pageX);
            // console.log(element);
            // console.log(this);
        };
        //手指滑动备忘笔记
        self.actionMove=function (element,index,data) {
            
            // var left=target.css('marginLeft');
            // console.log(left);
            self.disX=event.touches[0].pageX-self.pageX;
            self.finalLeft=self.disX+self.initialLeft;
            var target=self.target,left=self.finalLeft; 
            // console.log(event.currentTarget);
            if (left>0||left<=-target.next().height()) {
                return;          
            }
            target.css({
                'margin-left': left+'px'
            })
            target.next().css({
                'width': Math.abs(left)+'px'
            })
        };
        //手指离开备忘笔记
        self.actionEnd=function () {
            var maxWidth=self.target.next().height();
            var left=Math.abs(self.finalLeft);
            if (left>0&&left<maxWidth/2) {
                self.target.animate({'margin-left':'0'},'fast');       
                self.target.next().animate({'width':'0'},'fast');       
            } else if(left>=maxWidth/2&&left<maxWidth){
                self.target.animate({'margin-left':-maxWidth+'px'},'fast');       
                self.target.next().animate({'width':maxWidth+'px'},'fast');   
            }
        }
    }
          
              
</script>
</body>
</html>