<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1"/>
    <title>备忘录</title>
    <link rel="icon" href="/images/favicon.ico">
    <link href="/css/bootstrap.min.css" rel="stylesheet"/>
    <link href="/css/reset.less" rel="stylesheet/less"/>
    <link href="/css/main.less" rel="stylesheet/less"/>
    <link rel="stylesheet" href="/font-awesome/css/font-awesome.min.css">
    <script src="/js/less.js" type="text/javascript" charset="utf-8"></script>
    <!-- <script src="js/jquery-1.11.3.min.js"></script> -->
    <!-- <script src="js/bootstrap.min.js"></script> -->
    <script src="js/zepto.js"></script>
    <script type="text/javascript" src="js/underscore-noflect.js"></script>
    <script src="/js/lib/knockout-3.4.0.js"></script>
    <script type="text/javascript">
        (function(){
            var html = document.querySelector("html");
            var width = html.getBoundingClientRect().width;
            html.style.fontSize = width/25 + "px";
        })();
        // @w:1/30rem; 

    </script>
        
</head>
<body>

<div class="container note-pages note-notes" id="notes">
    <header class="clearfix header">
        <a href="/noteUser" class="user-info">
            <i class="fa fa-user fa-lg"></i>
            <%=username%>
        </a>
        <strong class="f_r edit-items edit-active" id="edit-items">编辑</strong>
    </header>
    <div class="content">
        <h1 class="title">备忘录</h1>
        <div class="note-search-input">
            <i class="fa fa-search fa-lg search-icon"></i>
            <input type="text" class="form-control" id="search" placeholder="搜索">
        </div>
        <div class="notes">
            <ul class="notes-items" id="notes-items" data-bind="foreach:{data: notes},visible: notes().length >0">
                <li class="notes-item clearfix" data-bind="attr:{id:id}">
                    <div class="item-container" data-bind="zepto: $root.zepto">
                        <div class="item-title">
                            <span data-bind="text:note_show.note_analyze(text).title"></span>
                        </div>
                        <div class="item-content">
                            <span data-bind="text:note_show.time_change(time)" class="item-time"></span>
                            <span data-bind="text:note_show.note_analyze(text).content" class="item-text"></span>
                        </div>
                    </div>
                    <div class="item-delete" style="" data-bind="delete_note: $root.delete_note">
                        <i class="fa fa-trash fa-lg"></i>
                    </div>
                </li>
            </ul>
        </div>
    </div>
    <div class="footer clearfix">
        <span class="notes-number">
            <strong data-bind="text:notes().length" id="number"></strong>个备忘录
        </span>
        <a href="/noteEdit" class="f_r edit" id="edit">
            <i class="fa fa-edit fa-lg"></i>
        </a>
    </div>
</div>





<script type="text/javascript">
    //显示搜索页面
    $(function () {
        $('#search').focus(function () {
            window.location="/noteSearch"; 
        })
    })
    var notes_list;
    //备忘录显示
    var Note_show=function () {
        this.init();
    };
    Note_show.prototype={
        constructor: Note_show,
        init: function () {
            this.get_all();
        },
        //获取所有数据
        get_all: function () {
            // console.log(11111111);
            $.ajax({
                'url': '/noteNotes',
                'type': 'get',
                'success': function (result) {
                    if (result!=='-2') {
                        if (!notes_list) {
                            notes_list={
                                notes: ko.observableArray()
                            }
                            ko.applyBindings(notes_list,document.getElementById("notes-items"));             
                        }
                        notes_list.notes(result.text);
                    } else{
                        alert('错误！'); 
                    }
                }
            })
        },
        //时间格式修改   
        time_change: function (text) {
            var content=text.replace(/([^\u0000-\u00FF])/g,'/')
            return content;
        },
        //获得备忘笔记的头部和内容部分
        note_analyze: function (text) {
            var obj={};
            var arr=text.split('\r\n');
            if (arr[0].length>=20) {
                obj.title=text.substring(0,19);
                obj.content=text.substring(20);      
            } else{
                obj.title=arr[0];
                obj.content=text.substring(arr[0].length); 
            }
            return obj;
        }     
    }
    var note_show=new Note_show();
    //zepto手势事件
    var Zepto=function () {};
    Zepto.prototype={
        constructor: Zepto,
        init: function (element) {
            this.max_width='-46px';
            //事件调用
            this.zepto_tap(element);
            this.zepto_swipeLeft(element);
            this.zepto_swipeRight(element);
        },
        //点击
        zepto_tap: function (element) {
            var _this=this;
            $(element).tap(function () {
                console.log(_this.max_width,'点击了'); 
                if ($(this).hasClass('active')) {
                    _this.move_back($(this)); 
                    return;  
                }  
                var id=$(this).parent().attr('id');
                window.location="/noteEdit/"+id; 
            })
        },
        //左滑
        zepto_swipeLeft: function (element) {
            var _this=this;
            $(element).swipeLeft(function () {
                console.log('左滑');  
                _this.all_back(element);
                _this.move_active($(this));  
            })
        },
        //右滑
        zepto_swipeRight: function (element) {
            var _this=this;
            $(element).swipeRight(function () {
                if ($(this).hasClass('active')) {
                    _this.move_back($(this)); 
                    return;  
                }   
            })
        },
        //其余的滑回原来位置
        all_back: function (now_element) {
            var _this=this;
            if ($('.item-container')) {
                $('.item-container').each(function (index,element) {
                    if ($(now_element)[0]!=$(element)[0]&&$(this).hasClass('active')) {
                        _this.move_back($(this));
                    }
                })
            }
        },
        //滑回原来位置
        move_back: function (element) {
            var _this=this;
            $(element).removeClass('active').animate({'left': '0'},'fast');       
            $(element).next().animate({'right': _this.max_width},'fast'); 
        },
        //左滑滑出
        move_active: function (element) {
            var _this=this;
            $(element).addClass('active').animate({'left': _this.max_width},'fast');       
            $(element).next().animate({'right': '0px'},'fast');
        }          
    }  
    var zepto=new Zepto();
    //Delete_note删除单条备忘录事件
    var Delete_note=function () {};
    Delete_note.prototype={
        constructor: Delete_note,
        init: function (element) {
            this.delete(element);
        },
        //点击，删除数据库数据和单条备忘录
        delete: function (element) {
            var _this=this;
            $(element).tap(function () {
                var parent=$(this).parent(),
                    id=parent.attr('id');
                $.post('/delete/'+id,{
                    'follow': false
                },function (result) {
                    if (result=='1') {
                        //数据库删除数据后，删除页面中的响应的DOM
                        var number=parseFloat($('#number').html());
                        parent.remove();
                        $('#number').html(--number); 
                    } else{
                        return;
                    }
                })
            })
        }
    }
    var delete_note=new Delete_note();
    //备忘录操作
    //自定义‘zepto’、删除单条备忘录事件
    ko.bindingHandlers.zepto={
        init: function (element) {
            zepto.init(element);
        }
    };
    ko.bindingHandlers.delete_note={
        init: function (element) {
            delete_note.init(element);
        }
    };
</script>
</body>
</html>